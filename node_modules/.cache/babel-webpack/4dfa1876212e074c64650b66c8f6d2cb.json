{"ast":null,"code":"import _createClass from \"/home/ghazouani/T\\xE9l\\xE9chargements/Website/Tassahilwebsite/argon-design/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/ghazouani/T\\xE9l\\xE9chargements/Website/Tassahilwebsite/argon-design/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Subject } from 'rxjs';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport io from 'socket.io-client';\nimport { Observable } from 'rxjs/Observable';\nimport { Component, Input, Injectable, EventEmitter, Output, ViewChild, ViewEncapsulation, HostListener, NgModule, defineInjectable } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"bottom\"];\n\nfunction ChatWidgetComponent_div_1_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵelement(3, \"chat-avatar\", 18);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 19);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 20);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵpipe(8, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var message_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"chat-message-received\", message_r5.type === \"received\")(\"chat-message-sent\", message_r5.type === \"sent\");\n    ɵngcc0.ɵɵproperty(\"@fadeIn\", undefined);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"image\", message_r5.from.avatar);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", message_r5.text, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind2(8, 8, message_r5.date, \"short\"), \" \");\n  }\n}\n\nfunction ChatWidgetComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 6);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementStart(5, \"span\", 7);\n    ɵngcc0.ɵɵtext(6, \"\\u25CF\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"button\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function ChatWidgetComponent_div_1_Template_button_click_7_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.toggleChat();\n    });\n    ɵngcc0.ɵɵtext(8, \"\\u2715\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(9, \"chat-avatar\", 9);\n    ɵngcc0.ɵɵelementStart(10, \"h3\", 10);\n    ɵngcc0.ɵɵtext(11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n    ɵngcc0.ɵɵelement(13, \"div\", 12, 13);\n    ɵngcc0.ɵɵtemplate(15, ChatWidgetComponent_div_1_ng_container_15_Template, 9, 11, \"ng-container\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(16, \"div\", 15);\n    ɵngcc0.ɵɵelementStart(17, \"chat-input\", 16);\n    ɵngcc0.ɵɵlistener(\"send\", function ChatWidgetComponent_div_1_Template_chat_input_send_17_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.sendMessage($event);\n    })(\"dismiss\", function ChatWidgetComponent_div_1_Template_chat_input_dismiss_17_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.toggleChat();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@fadeInOut\", ctx_r0.visible);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.operator.status, \" \");\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"image\", ctx_r0.operator.avatar);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.operator.name, \" \");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"focus\", ctx_r0.focus);\n  }\n}\n\nfunction ChatWidgetComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1, \"\\u2715\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"@fadeIn\", undefined);\n  }\n}\n\nfunction ChatWidgetComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1, \"?\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"@fadeIn\", undefined);\n  }\n}\n\nvar _c1 = [\"message\"];\n\nfunction ChatConfigComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function ChatConfigComponent_button_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var item_r1 = ctx.$implicit;\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.setTheme(item_r1);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-active\", item_r1 === ctx_r0.theme);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r1, \" \");\n  }\n}\n\nvar ChatAvatarComponent = function ChatAvatarComponent() {\n  _classCallCheck(this, ChatAvatarComponent);\n};\n\nChatAvatarComponent.ɵfac = function ChatAvatarComponent_Factory(t) {\n  return new (t || ChatAvatarComponent)();\n};\n\nChatAvatarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ChatAvatarComponent,\n  selectors: [[\"chat-avatar\"]],\n  inputs: {\n    image: \"image\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[1, \"avatar\"]],\n  template: function ChatAvatarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"img\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"src\", ctx.image, ɵngcc0.ɵɵsanitizeUrl);\n    }\n  },\n  styles: [\".avatar[_ngcontent-%COMP%] {\\n      height: 30px;\\n      width: 30px;\\n      border-radius: 50%;\\n      float: left;\\n      margin-right: 10px;\\n    }\"]\n});\nChatAvatarComponent.propDecorators = {\n  image: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ChatAvatarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'chat-avatar',\n      template: \"\\n    <img [attr.src]=\\\"image\\\" class=\\\"avatar\\\" />\\n  \",\n      styles: [\"\\n    .avatar {\\n      height: 30px;\\n      width: 30px;\\n      border-radius: 50%;\\n      float: left;\\n      margin-right: 10px;\\n    }\\n  \"]\n    }]\n  }], null, {\n    image: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar fadeInOut = trigger('fadeInOut', [transition(':enter', [style({\n  opacity: 0\n}), animate(250)]), transition('* => void', [animate(250, style({\n  opacity: 0\n}))])]);\n/** @type {?} */\n\nvar fadeIn = trigger('fadeIn', [transition(':enter', [style({\n  opacity: 0\n}), animate(500)]), transition(':leave', [style({\n  opacity: 0\n}), animate(1)])]);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar ChatService = /*#__PURE__*/function () {\n  function ChatService() {\n    var _this = this;\n\n    _classCallCheck(this, ChatService);\n\n    this.getMessages =\n    /**\n    * @return {?}\n    */\n    function () {\n      return Observable.create(\n      /**\n      * @param {?} observer\n      * @return {?}\n      */\n      function (observer) {\n        _this.socket.on('bot_uttered',\n        /**\n        * @param {?} message\n        * @return {?}\n        */\n        function (message) {\n          observer.next(message);\n        });\n      });\n    };\n  }\n  /**\n   * @param {?} url\n   * @return {?}\n   */\n\n\n  _createClass(ChatService, [{\n    key: \"connect\",\n    value: function connect(url) {\n      var _this2 = this;\n\n      this.socket = io(url);\n      this.socket.on('connect',\n      /**\n      * @return {?}\n      */\n      function () {\n        _this2.socket.emit('session_request', {\n          'session_id': _this2.socket.id\n        });\n      });\n      this.socket.on('session_confirm',\n      /**\n      * @param {?} remote_id\n      * @return {?}\n      */\n      function (remote_id) {});\n      this.socket.on('connect_error',\n      /**\n      * @param {?} error\n      * @return {?}\n      */\n      function (error) {\n        console.log(error);\n      });\n      this.socket.on('error',\n      /**\n      * @param {?} error\n      * @return {?}\n      */\n      function (error) {\n        console.log(error);\n      });\n      this.socket.on('disconnect',\n      /**\n      * @param {?} reason\n      * @return {?}\n      */\n      function (reason) {\n        console.log(reason);\n      });\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(message) {\n      this.socket.emit('user_uttered', {\n        'message': message\n      });\n    }\n  }]);\n\n  return ChatService;\n}();\n\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)();\n};\n\nChatService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nChatService.ctorParameters = function () {\n  return [];\n};\n/** @nocollapse */\n\n\nChatService.ngInjectableDef = defineInjectable({\n  factory: function ChatService_Factory() {\n    return new ChatService();\n  },\n  token: ChatService,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ChatService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ChatWidgetComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} chatService\n   */\n  function ChatWidgetComponent(chatService) {\n    _classCallCheck(this, ChatWidgetComponent);\n\n    this.theme = 'blue';\n    this.botName = 'Bot';\n    this.botAvatar = \"https://cdn.dribbble.com/users/275794/screenshots/3128598/gbot_800.png\";\n    this.userAvatar = \"https://storage.proboards.com/6172192/images/gKhXFw_5W0SD4nwuMev1.png\";\n    this.url = 'http://localhost:5002';\n    this.startingMessage = 'Hi, how can we help you?';\n    this.opened = true;\n    this._visible = false;\n    this.focus = new Subject();\n    this.messages = [];\n    this.chatService = chatService;\n    this.chatService.connect(this.url);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ChatWidgetComponent, [{\n    key: \"visible\",\n    get: function get() {\n      return this._visible;\n    }\n    /**\n     * @param {?} visible\n     * @return {?}\n     */\n    ,\n    set: function set(visible) {\n      var _this3 = this;\n\n      this._visible = visible;\n\n      if (this._visible) {\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this3.scrollToBottom();\n\n          _this3.focusMessage();\n        }, 0);\n      }\n    }\n    /**\n     * @param {?} from\n     * @param {?} text\n     * @param {?} type\n     * @return {?}\n     */\n\n  }, {\n    key: \"addMessage\",\n    value: function addMessage(from, text, type) {\n      this.messages.unshift({\n        from: from,\n        text: text,\n        type: type,\n        date: new Date().getTime()\n      });\n      this.scrollToBottom();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"scrollToBottom\",\n    value: function scrollToBottom() {\n      if (this.bottom !== undefined) {\n        this.bottom.nativeElement.scrollIntoView();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"focusMessage\",\n    value: function focusMessage() {\n      this.focus.next(true);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this4 = this;\n\n      this.client = {\n        name: 'Guest User',\n        status: 'online',\n        avatar: this.userAvatar\n      };\n      this.operator = {\n        name: this.botName,\n        status: 'online',\n        avatar: this.botAvatar\n      };\n\n      if (this.opened) {\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this4.visible = true;\n        }, 1000);\n      }\n\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this4.addMessage(_this4.operator, _this4.startingMessage, 'received');\n      }, 1500);\n      this.chatService.getMessages().subscribe(\n      /**\n      * @param {?} message\n      * @return {?}\n      */\n      function (message) {\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this4.addMessage(_this4.operator, message.text, 'received');\n        }, 1000);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggleChat\",\n    value: function toggleChat() {\n      this.visible = !this.visible;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(_ref) {\n      var message = _ref.message;\n\n      if (message.trim() === '') {\n        return;\n      }\n\n      this.addMessage(this.client, message, 'sent');\n      this.chatService.sendMessage(message);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleKeyboardEvent\",\n    value: function handleKeyboardEvent(event) {\n      if (event.key === '/') {\n        this.focusMessage();\n      }\n\n      if (event.key === '?' && !this._visible) {\n        this.toggleChat();\n      }\n    }\n  }]);\n\n  return ChatWidgetComponent;\n}();\n\nChatWidgetComponent.ɵfac = function ChatWidgetComponent_Factory(t) {\n  return new (t || ChatWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ChatService));\n};\n\nChatWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ChatWidgetComponent,\n  selectors: [[\"chat-widget\"]],\n  viewQuery: function ChatWidgetComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.bottom = _t.first);\n    }\n  },\n  hostBindings: function ChatWidgetComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keypress\", function ChatWidgetComponent_keypress_HostBindingHandler($event) {\n        return ctx.handleKeyboardEvent($event);\n      }, false, ɵngcc0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    theme: \"theme\",\n    botName: \"botName\",\n    botAvatar: \"botAvatar\",\n    userAvatar: \"userAvatar\",\n    url: \"url\",\n    startingMessage: \"startingMessage\",\n    opened: \"opened\",\n    visible: \"visible\"\n  },\n  decls: 5,\n  vars: 6,\n  consts: [[\"class\", \"chat-box\", 4, \"ngIf\"], [1, \"chat-button\", 3, \"click\"], [4, \"ngIf\"], [1, \"chat-box\"], [1, \"chat-box-header\"], [1, \"\"], [1, \"operator-status\"], [1, \"operator-status-online\"], [1, \"chat-button-header\", 3, \"click\"], [3, \"image\"], [1, \"operator-name\"], [1, \"chat-box-main\"], [1, \"chat-message-bottom\"], [\"bottom\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"chat-box-footer\"], [3, \"focus\", \"send\", \"dismiss\"], [1, \"chat-message\"], [1, \"chat-message-from-avatar\", 3, \"image\"], [1, \"chat-message-text\"], [1, \"chat-message-date\"]],\n  template: function ChatWidgetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\");\n      ɵngcc0.ɵɵtemplate(1, ChatWidgetComponent_div_1_Template, 18, 6, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(2, \"button\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function ChatWidgetComponent_Template_button_click_2_listener() {\n        return ctx.toggleChat();\n      });\n      ɵngcc0.ɵɵtemplate(3, ChatWidgetComponent_span_3_Template, 2, 1, \"span\", 2);\n      ɵngcc0.ɵɵtemplate(4, ChatWidgetComponent_span_4_Template, 2, 1, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx.theme, \"\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.visible);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.visible);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.visible);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ChatAvatarComponent, ɵngcc1.NgForOf, ChatInputComponent];\n  },\n  pipes: function pipes() {\n    return [ɵngcc1.DatePipe];\n  },\n  styles: [\"*[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;font-family:\\\"Open Sans\\\",\\\"Helvetica Neue\\\",sans-serif}.wrapper[_ngcontent-%COMP%]{position:absolute;top:0;bottom:0;height:100vh;width:100vw}.chat-button[_ngcontent-%COMP%]{z-index:1;width:60px;height:60px;position:absolute;bottom:20px;right:40px;box-shadow:0 5px 40px rgba(0,0,0,.16);background:#1976d2;border-radius:50%;border:none;outline:0;color:#fff;font-size:32px}.chat-button-header[_ngcontent-%COMP%]{z-index:1;font-weight:700;color:#fff;border:1px solid #fff;background-color:inherit;padding:5px 9px;margin-left:5px}.chat-button[_ngcontent-%COMP%]:focus{border:2px solid #fff}.chat-box[_ngcontent-%COMP%]{z-index:2;position:absolute;left:0;height:100vh;width:100vw;margin:0;display:flex;flex-direction:column;box-shadow:0 5px 40px rgba(0,0,0,.16);background:#1976d2}.chat-box-hidden[_ngcontent-%COMP%]{display:none}.chat-box-header[_ngcontent-%COMP%]{padding:10px;color:#fff}.chat-box-main[_ngcontent-%COMP%]{flex:1;width:100%;background:#f5f5f5;display:flex;flex-direction:column-reverse;overflow:auto}.chat-box-footer[_ngcontent-%COMP%]{color:#fff;height:50px}.operator-name[_ngcontent-%COMP%]{margin:0;padding:1px}.operator-status[_ngcontent-%COMP%]{float:right;padding:4px}.operator-status[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:4px}.operator-status-online[_ngcontent-%COMP%]{color:#7cfc00}.operator-status-offline[_ngcontent-%COMP%]{color:red}.operator-avatar[_ngcontent-%COMP%]{height:30px;width:30px;border-radius:50%;float:left;margin-right:10px}.chat-message[_ngcontent-%COMP%]{display:block;width:auto;margin:5px;align-self:flex-start;flex-direction:row;max-width:80%;word-wrap:break-word}.chat-message-date[_ngcontent-%COMP%]{font-size:11px;color:#8d898d;padding:5px}.chat-message-from-avatar[_ngcontent-%COMP%]{height:35px;width:35px;border-radius:50%}.chat-message-text[_ngcontent-%COMP%]{margin-left:10px;padding:10px;border-radius:3px}.chat-message-received[_ngcontent-%COMP%]{margin-right:50px}.chat-message-received[_ngcontent-%COMP%]   .chat-message-text[_ngcontent-%COMP%]{background:#b9d6f2;margin-left:50px;border-bottom-left-radius:0}.chat-message-received[_ngcontent-%COMP%]   .chat-message-text[_ngcontent-%COMP%]:before{position:absolute;content:\\\" \\\";left:-10px;bottom:0;border-right:10px solid #b9d6f2;border-top:10px solid transparent;z-index:0}.chat-message-received[_ngcontent-%COMP%]   .chat-message-date[_ngcontent-%COMP%]{margin-left:50px}.chat-message-received[_ngcontent-%COMP%]   .chat-message-from-avatar[_ngcontent-%COMP%]{position:absolute;left:0;bottom:-15px}.chat-message-sent[_ngcontent-%COMP%]{align-self:flex-end}.chat-message-sent[_ngcontent-%COMP%]   .chat-message-from[_ngcontent-%COMP%]{float:right}.chat-message-sent[_ngcontent-%COMP%]   .chat-message-text[_ngcontent-%COMP%]{background:#84dccf;margin-right:50px;border-bottom-right-radius:0}.chat-message-sent[_ngcontent-%COMP%]   .chat-message-text[_ngcontent-%COMP%]:after{position:absolute;content:\\\" \\\";right:-10px;bottom:0;border-left:10px solid #84dccf;border-top:10px solid transparent;z-index:0}.chat-message-sent[_ngcontent-%COMP%]   .chat-message-date[_ngcontent-%COMP%]{text-align:right;padding-right:50px}.chat-message-sent[_ngcontent-%COMP%]   .chat-message-from-avatar[_ngcontent-%COMP%]{position:absolute;right:0;bottom:-15px}.blue[_ngcontent-%COMP%]   .chat-box[_ngcontent-%COMP%], .blue[_ngcontent-%COMP%]   .chat-button[_ngcontent-%COMP%]{background:#1976d2}.grey[_ngcontent-%COMP%]   .chat-box[_ngcontent-%COMP%], .grey[_ngcontent-%COMP%]   .chat-button[_ngcontent-%COMP%]{background:#454549}.red[_ngcontent-%COMP%]   .chat-box[_ngcontent-%COMP%], .red[_ngcontent-%COMP%]   .chat-button[_ngcontent-%COMP%]{background:#dd0031}@media (min-width:576px){.wrapper[_ngcontent-%COMP%]{top:auto;right:0;width:300px}.chat-button[_ngcontent-%COMP%]{display:block}.chat-button-header[_ngcontent-%COMP%]{display:none}.chat-box[_ngcontent-%COMP%]{top:auto;left:auto;bottom:100px;right:40px;height:60vh;width:300px;border-radius:10px}}@media (min-width:768px){.chat-box[_ngcontent-%COMP%]{height:70vh}}@media (min-width:992px){.chat-box[_ngcontent-%COMP%]{height:80vh}}\"],\n  data: {\n    animation: [fadeInOut, fadeIn]\n  }\n});\n/** @nocollapse */\n\nChatWidgetComponent.ctorParameters = function () {\n  return [{\n    type: ChatService\n  }];\n};\n\nChatWidgetComponent.propDecorators = {\n  bottom: [{\n    type: ViewChild,\n    args: ['bottom']\n  }],\n  theme: [{\n    type: Input\n  }],\n  botName: [{\n    type: Input\n  }],\n  botAvatar: [{\n    type: Input\n  }],\n  userAvatar: [{\n    type: Input\n  }],\n  url: [{\n    type: Input\n  }],\n  startingMessage: [{\n    type: Input\n  }],\n  opened: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }],\n  handleKeyboardEvent: [{\n    type: HostListener,\n    args: ['document:keypress', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ChatWidgetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'chat-widget',\n      template: \"<div class=\\\"wrapper {{theme}}\\\">\\n  <div class=\\\"chat-box\\\" *ngIf=\\\"visible\\\" [@fadeInOut]=\\\"visible\\\">\\n    <div class=\\\"chat-box-header\\\">\\n      <div class=\\\"\\\">\\n        <div class=\\\"operator-status\\\">\\n          {{operator.status}}\\n          <span class=\\\"operator-status-online\\\">\\u25CF</span>\\n          <button class=\\\"chat-button-header\\\" (click)=\\\"toggleChat()\\\">\\u2715</button>\\n        </div>\\n        <chat-avatar [image]=\\\"operator.avatar\\\"></chat-avatar>\\n        <h3 class=\\\"operator-name\\\">\\n          {{operator.name}}\\n        </h3>\\n      </div>\\n    </div>\\n    <div class=\\\"chat-box-main\\\">\\n      <div class=\\\"chat-message-bottom\\\" #bottom></div>\\n      <ng-container *ngFor=\\\"let message of messages\\\">\\n        <div class=\\\"chat-message\\\" [class.chat-message-received]=\\\"message.type === 'received'\\\"\\n             [@fadeIn]\\n             [class.chat-message-sent]=\\\"message.type === 'sent'\\\">\\n          <div >\\n            <chat-avatar [image]=\\\"message.from.avatar\\\" class=\\\"chat-message-from-avatar\\\"></chat-avatar>\\n            <div class=\\\"chat-message-text\\\">\\n              {{message.text}}\\n            </div>\\n          </div>\\n          <div class=\\\"chat-message-date\\\">\\n            {{message.date | date: 'short'}}\\n          </div>\\n        </div>\\n      </ng-container>\\n    </div>\\n    <div class=\\\"chat-box-footer\\\">\\n      <chat-input (send)=\\\"sendMessage($event)\\\" (dismiss)=\\\"toggleChat()\\\" [focus]=\\\"focus\\\"></chat-input>\\n    </div>\\n  </div>\\n  <button class=\\\"chat-button\\\" (click)=\\\"toggleChat()\\\">\\n    <span [@fadeIn] *ngIf=\\\"visible\\\">\\u2715</span>\\n    <span [@fadeIn] *ngIf=\\\"!visible\\\">?</span>\\n  </button>\\n</div>\\n\",\n      animations: [fadeInOut, fadeIn],\n      styles: [\"*{box-sizing:border-box;position:relative;font-family:\\\"Open Sans\\\",\\\"Helvetica Neue\\\",sans-serif}.wrapper{position:absolute;top:0;bottom:0;height:100vh;width:100vw}.chat-button{z-index:1;width:60px;height:60px;position:absolute;bottom:20px;right:40px;box-shadow:0 5px 40px rgba(0,0,0,.16);background:#1976d2;border-radius:50%;border:none;outline:0;color:#fff;font-size:32px}.chat-button-header{z-index:1;font-weight:700;color:#fff;border:1px solid #fff;background-color:inherit;padding:5px 9px;margin-left:5px}.chat-button:focus{border:2px solid #fff}.chat-box{z-index:2;position:absolute;left:0;height:100vh;width:100vw;margin:0;display:flex;flex-direction:column;box-shadow:0 5px 40px rgba(0,0,0,.16);background:#1976d2}.chat-box-hidden{display:none}.chat-box-header{padding:10px;color:#fff}.chat-box-main{flex:1;width:100%;background:#f5f5f5;display:flex;flex-direction:column-reverse;overflow:auto}.chat-box-footer{color:#fff;height:50px}.operator-name{margin:0;padding:1px}.operator-status{float:right;padding:4px}.operator-status span{margin-left:4px}.operator-status-online{color:#7cfc00}.operator-status-offline{color:red}.operator-avatar{height:30px;width:30px;border-radius:50%;float:left;margin-right:10px}.chat-message{display:block;width:auto;margin:5px;align-self:flex-start;flex-direction:row;max-width:80%;word-wrap:break-word}.chat-message-date{font-size:11px;color:#8d898d;padding:5px}.chat-message-from-avatar{height:35px;width:35px;border-radius:50%}.chat-message-text{margin-left:10px;padding:10px;border-radius:3px}.chat-message-received{margin-right:50px}.chat-message-received .chat-message-text{background:#b9d6f2;margin-left:50px;border-bottom-left-radius:0}.chat-message-received .chat-message-text:before{position:absolute;content:\\\" \\\";left:-10px;bottom:0;border-right:10px solid #b9d6f2;border-top:10px solid transparent;z-index:0}.chat-message-received .chat-message-date{margin-left:50px}.chat-message-received .chat-message-from-avatar{position:absolute;left:0;bottom:-15px}.chat-message-sent{align-self:flex-end}.chat-message-sent .chat-message-from{float:right}.chat-message-sent .chat-message-text{background:#84dccf;margin-right:50px;border-bottom-right-radius:0}.chat-message-sent .chat-message-text:after{position:absolute;content:\\\" \\\";right:-10px;bottom:0;border-left:10px solid #84dccf;border-top:10px solid transparent;z-index:0}.chat-message-sent .chat-message-date{text-align:right;padding-right:50px}.chat-message-sent .chat-message-from-avatar{position:absolute;right:0;bottom:-15px}.blue .chat-box,.blue .chat-button{background:#1976d2}.grey .chat-box,.grey .chat-button{background:#454549}.red .chat-box,.red .chat-button{background:#dd0031}@media (min-width:576px){.wrapper{top:auto;right:0;width:300px}.chat-button{display:block}.chat-button-header{display:none}.chat-box{top:auto;left:auto;bottom:100px;right:40px;height:60vh;width:300px;border-radius:10px}}@media (min-width:768px){.chat-box{height:70vh}}@media (min-width:992px){.chat-box{height:80vh}}\"]\n    }]\n  }], function () {\n    return [{\n      type: ChatService\n    }];\n  }, {\n    theme: [{\n      type: Input\n    }],\n    botName: [{\n      type: Input\n    }],\n    botAvatar: [{\n      type: Input\n    }],\n    userAvatar: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    startingMessage: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeyboardEvent: [{\n      type: HostListener,\n      args: ['document:keypress', ['$event']]\n    }],\n    bottom: [{\n      type: ViewChild,\n      args: ['bottom']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ChatInputComponent = /*#__PURE__*/function () {\n  function ChatInputComponent() {\n    _classCallCheck(this, ChatInputComponent);\n\n    this.buttonText = '↩︎';\n    this.focus = new EventEmitter();\n    this.send = new EventEmitter();\n    this.dismiss = new EventEmitter();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ChatInputComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this5 = this;\n\n      this.focus.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this5.focusMessage();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"focusMessage\",\n    value: function focusMessage() {\n      this.message.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMessage\",\n    value: function getMessage() {\n      return this.message.nativeElement.value;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearMessage\",\n    value: function clearMessage() {\n      this.message.nativeElement.value = '';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      /** @type {?} */\n      var message = this.getMessage();\n\n      if (message.trim() === '') {\n        return;\n      }\n\n      this.send.emit({\n        message: message\n      });\n      this.clearMessage();\n      this.focusMessage();\n    }\n  }]);\n\n  return ChatInputComponent;\n}();\n\nChatInputComponent.ɵfac = function ChatInputComponent_Factory(t) {\n  return new (t || ChatInputComponent)();\n};\n\nChatInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ChatInputComponent,\n  selectors: [[\"chat-input\"]],\n  viewQuery: function ChatInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.message = _t.first);\n    }\n  },\n  inputs: {\n    buttonText: \"buttonText\",\n    focus: \"focus\"\n  },\n  outputs: {\n    send: \"send\",\n    dismiss: \"dismiss\"\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[\"type\", \"text\", \"placeholder\", \"Type message...\", 1, \"chat-input-text\", 3, \"keydown.enter\", \"keyup.enter\", \"keyup.escape\"], [\"message\", \"\"], [\"type\", \"submit\", 1, \"chat-input-submit\", 3, \"click\"]],\n  template: function ChatInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r1 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"textarea\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"keydown.enter\", function ChatInputComponent_Template_textarea_keydown_enter_0_listener() {\n        return ctx.onSubmit();\n      })(\"keyup.enter\", function ChatInputComponent_Template_textarea_keyup_enter_0_listener() {\n        ɵngcc0.ɵɵrestoreView(_r1);\n\n        var _r0 = ɵngcc0.ɵɵreference(1);\n\n        return _r0.value = \"\";\n      })(\"keyup.escape\", function ChatInputComponent_Template_textarea_keyup_escape_0_listener() {\n        return ctx.dismiss.emit();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function ChatInputComponent_Template_button_click_2_listener() {\n        return ctx.onSubmit();\n      });\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.buttonText, \" \");\n    }\n  },\n  styles: [\".chat-input-text{margin:14px 0 0 14px;height:25px;width:70%;border:0;resize:none;border:none;overflow:auto;outline:0;box-shadow:none;font-size:14px;background-color:inherit;color:inherit}.chat-input-text::-webkit-input-placeholder{color:inherit}.chat-input-text::-moz-placeholder{color:inherit}.chat-input-text::-ms-input-placeholder{color:inherit}.chat-input-submit{margin:14px 12px;float:right;background-color:inherit;color:inherit;font-size:24px;border:0;outline:0}\"],\n  encapsulation: 2\n});\nChatInputComponent.propDecorators = {\n  buttonText: [{\n    type: Input\n  }],\n  focus: [{\n    type: Input\n  }],\n  send: [{\n    type: Output\n  }],\n  dismiss: [{\n    type: Output\n  }],\n  message: [{\n    type: ViewChild,\n    args: ['message']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ChatInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'chat-input',\n      template: \"\\n    <textarea type=\\\"text\\\" class=\\\"chat-input-text\\\" placeholder=\\\"Type message...\\\"\\n              #message (keydown.enter)=\\\"onSubmit()\\\" (keyup.enter)=\\\"message.value = ''\\\" (keyup.escape)=\\\"dismiss.emit()\\\"></textarea>\\n    <button type=\\\"submit\\\" class=\\\"chat-input-submit\\\" (click)=\\\"onSubmit()\\\">\\n      {{buttonText}}\\n    </button>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".chat-input-text{margin:14px 0 0 14px;height:25px;width:70%;border:0;resize:none;border:none;overflow:auto;outline:0;box-shadow:none;font-size:14px;background-color:inherit;color:inherit}.chat-input-text::-webkit-input-placeholder{color:inherit}.chat-input-text::-moz-placeholder{color:inherit}.chat-input-text::-ms-input-placeholder{color:inherit}.chat-input-submit{margin:14px 12px;float:right;background-color:inherit;color:inherit;font-size:24px;border:0;outline:0}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    buttonText: [{\n      type: Input\n    }],\n    focus: [{\n      type: Input\n    }],\n    send: [{\n      type: Output\n    }],\n    dismiss: [{\n      type: Output\n    }],\n    message: [{\n      type: ViewChild,\n      args: ['message']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ChatConfigComponent = /*#__PURE__*/function () {\n  function ChatConfigComponent() {\n    _classCallCheck(this, ChatConfigComponent);\n\n    this.text = 'Select theme';\n    this.themeChange = new EventEmitter();\n    this.themes = ['blue', 'grey', 'red'];\n  }\n  /**\n   * @param {?} theme\n   * @return {?}\n   */\n\n\n  _createClass(ChatConfigComponent, [{\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      this.theme = theme;\n      this.themeChange.emit(this.theme);\n    }\n  }]);\n\n  return ChatConfigComponent;\n}();\n\nChatConfigComponent.ɵfac = function ChatConfigComponent_Factory(t) {\n  return new (t || ChatConfigComponent)();\n};\n\nChatConfigComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ChatConfigComponent,\n  selectors: [[\"chat-config\"]],\n  inputs: {\n    text: \"text\",\n    theme: \"theme\"\n  },\n  outputs: {\n    themeChange: \"themeChange\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"chat-config\"], [\"class\", \"btn\", 3, \"btn-active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", 3, \"click\"]],\n  template: function ChatConfigComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵtemplate(2, ChatConfigComponent_button_2_Template, 2, 3, \"button\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.text, \" \");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.themes);\n    }\n  },\n  directives: [ɵngcc1.NgForOf],\n  styles: [\".chat-config[_ngcontent-%COMP%] {\\n      padding: 20px;\\n    }\\n    .btn[_ngcontent-%COMP%] {\\n      padding: 5px;\\n      margin: 0px 2px;\\n      border: 1px solid #dedede;\\n      outline: none;\\n    }\\n    .btn-active[_ngcontent-%COMP%] {\\n      border: 1px solid #a0a0a0;\\n    }\\n    .btn[_ngcontent-%COMP%]:focus {\\n      border: 1px solid #333;\\n    }\"]\n});\nChatConfigComponent.propDecorators = {\n  theme: [{\n    type: Input\n  }],\n  text: [{\n    type: Input\n  }],\n  themeChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ChatConfigComponent, [{\n    type: Component,\n    args: [{\n      selector: 'chat-config',\n      template: \"\\n    <div class=\\\"chat-config\\\">\\n      {{text}}\\n      <button *ngFor=\\\"let item of themes\\\"\\n              class=\\\"btn\\\" [class.btn-active]=\\\"item === theme\\\"\\n              (click)=\\\"setTheme(item)\\\">\\n        {{item}}\\n      </button>\\n    </div>\\n  \",\n      styles: [\"\\n    .chat-config {\\n      padding: 20px;\\n    }\\n    .btn {\\n      padding: 5px;\\n      margin: 0px 2px;\\n      border: 1px solid #dedede;\\n      outline: none;\\n    }\\n    .btn-active {\\n      border: 1px solid #a0a0a0;\\n    }\\n    .btn:focus {\\n      border: 1px solid #333;\\n    }\\n  \"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    text: [{\n      type: Input\n    }],\n    themeChange: [{\n      type: Output\n    }],\n    theme: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ChatbotRasaModule = function ChatbotRasaModule() {\n  _classCallCheck(this, ChatbotRasaModule);\n};\n\nChatbotRasaModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ChatbotRasaModule\n});\nChatbotRasaModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ChatbotRasaModule_Factory(t) {\n    return new (t || ChatbotRasaModule)();\n  },\n  providers: [ChatService],\n  imports: [[CommonModule, BrowserAnimationsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChatbotRasaModule, {\n    declarations: function declarations() {\n      return [ChatAvatarComponent, ChatWidgetComponent, ChatInputComponent, ChatConfigComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, BrowserAnimationsModule];\n    },\n    exports: function exports() {\n      return [ChatWidgetComponent, ChatConfigComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ChatbotRasaModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, BrowserAnimationsModule],\n      declarations: [ChatAvatarComponent, ChatWidgetComponent, ChatInputComponent, ChatConfigComponent],\n      exports: [ChatWidgetComponent, ChatConfigComponent],\n      entryComponents: [ChatWidgetComponent, ChatConfigComponent],\n      providers: [ChatService]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ChatbotRasaModule, fadeIn as ɵd, fadeInOut as ɵc, ChatAvatarComponent as ɵa, ChatConfigComponent as ɵg, ChatInputComponent as ɵf, ChatWidgetComponent as ɵb, ChatService as ɵe };","map":{"version":3,"sources":["angular-chat-widget-rasa/lib/chat-avatar/chat-avatar.component.ts","angular-chat-widget-rasa/lib/animations.ts","angular-chat-widget-rasa/lib/chatbot-rasa.service.ts","angular-chat-widget-rasa/lib/chat-widget/chat-widget.component.ts","angular-chat-widget-rasa/lib/chat-input/chat-input.component.ts","angular-chat-widget-rasa/lib/chat-config/chat-config.component.ts","angular-chat-widget-rasa/lib/chatbot-rasa.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'chat-avatar',\n  template: `\n    <img [attr.src]=\"image\" class=\"avatar\" />\n  `,\n  styles: [`\n    .avatar {\n      height: 30px;\n      width: 30px;\n      border-radius: 50%;\n      float: left;\n      margin-right: 10px;\n    }\n  `]\n})\nexport class ChatAvatarComponent {\n  @Input() public image: string\n}\n","import { animate, style, transition, trigger } from '@angular/animations'\n\nexport const fadeInOut = trigger('fadeInOut', [\n  transition(':enter', [\n    style({opacity: 0}),\n    animate(250 )\n  ]),\n  transition('* => void', [\n    animate(250, style({\n      opacity: 0,\n    }))\n  ])\n])\n\nexport const fadeIn = trigger('fadeIn', [\n  transition(':enter', [\n    style({opacity: 0}),\n    animate(500 )\n  ]),\n  transition(':leave', [\n    style({opacity: 0}),\n    animate(1 )\n  ]),\n])\n","import { Injectable } from '@angular/core';\nimport io from 'socket.io-client';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  private socket;\n\n  constructor() {\n\n  }\n\n  public connect(url: string){\n    this.socket = io(url);\n    this.socket.on('connect', () => {\n      this.socket.emit('session_request', {'session_id':this.socket.id})\n    });\n    this.socket.on('session_confirm', (remote_id) => {\n    })\n    this.socket.on('connect_error', (error) => {\n      console.log(error);\n    });\n\n    this.socket.on('error', (error) => {\n      console.log(error);\n    });\n\n    this.socket.on('disconnect', (reason) => {\n      console.log(reason);\n    });\n  }\n\n  public sendMessage(message) {\n    this.socket.emit('user_uttered', {'message':message});\n  }\n\n  public getMessages = () => {\n        return Observable.create((observer) => {\n            this.socket.on('bot_uttered', (message) => {\n                observer.next(message);\n            });\n        });\n  }\n}\n","import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core'\nimport { Subject } from 'rxjs'\nimport { fadeIn, fadeInOut } from '../animations'\nimport { ChatService } from '../chatbot-rasa.service';\n\nconst rand = max => Math.floor(Math.random() * max)\n\n@Component({\n  selector: 'chat-widget',\n  templateUrl: './chat-widget.component.html',\n  styleUrls: ['./chat-widget.component.css'],\n  animations: [fadeInOut, fadeIn],\n})\nexport class ChatWidgetComponent implements OnInit {\n  @ViewChild('bottom') bottom: ElementRef\n  @Input() public theme: 'blue' | 'grey' | 'red' = 'blue'\n  @Input() public botName: string = 'Bot';\n  @Input() public botAvatar: string = `https://cdn.dribbble.com/users/275794/screenshots/3128598/gbot_800.png`\n  @Input() public userAvatar: string = `https://storage.proboards.com/6172192/images/gKhXFw_5W0SD4nwuMev1.png`\n  @Input() public url: string = 'http://localhost:5002'\n  @Input() public startingMessage: string = 'Hi, how can we help you?'\n  @Input() public opened: boolean = true\n\n  public _visible = false\n\n  private chatService: ChatService;\n\n  constructor(chatService: ChatService) {\n    this.chatService = chatService;\n    this.chatService.connect(this.url);\n  }\n\n  public get visible() {\n    return this._visible\n  }\n\n  @Input() public set visible(visible) {\n    this._visible = visible\n    if (this._visible) {\n      setTimeout(() => {\n        this.scrollToBottom()\n        this.focusMessage()\n      }, 0)\n    }\n  }\n\n  public focus = new Subject()\n\n  public operator;\n\n  public client;\n\n  public messages = []\n\n  public addMessage(from, text, type: 'received' | 'sent') {\n    this.messages.unshift({\n      from,\n      text,\n      type,\n      date: new Date().getTime(),\n    })\n    this.scrollToBottom()\n  }\n\n  public scrollToBottom() {\n    if (this.bottom !== undefined) {\n      this.bottom.nativeElement.scrollIntoView()\n    }\n  }\n\n  public focusMessage() {\n    this.focus.next(true)\n  }\n\n  ngOnInit() {\n    this.client = {\n      name: 'Guest User',\n      status: 'online',\n      avatar: this.userAvatar,\n    };\n\n    this.operator  = {\n      name: this.botName,\n      status: 'online',\n      avatar: this.botAvatar,\n    };\n    if(this.opened){\n      setTimeout(() => this.visible = true, 1000)\n    }\n    setTimeout(() => {\n      this.addMessage(this.operator, this.startingMessage, 'received')\n    }, 1500)\n    this.chatService\n      .getMessages()\n      .subscribe((message) => {\n        setTimeout(()=> {this.addMessage(this.operator, message.text, 'received')},1000);\n      });\n  }\n\n  public toggleChat() {\n    this.visible = !this.visible\n  }\n\n  public sendMessage({ message }) {\n    if (message.trim() === '') {\n      return\n    }\n    this.addMessage(this.client, message, 'sent')\n    this.chatService.sendMessage(message)\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (event.key === '/') {\n      this.focusMessage()\n    }\n    if (event.key === '?' && !this._visible) {\n      this.toggleChat()\n    }\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core'\n\n@Component({\n  selector: 'chat-input',\n  template: `\n    <textarea type=\"text\" class=\"chat-input-text\" placeholder=\"Type message...\"\n              #message (keydown.enter)=\"onSubmit()\" (keyup.enter)=\"message.value = ''\" (keyup.escape)=\"dismiss.emit()\"></textarea>\n    <button type=\"submit\" class=\"chat-input-submit\" (click)=\"onSubmit()\">\n      {{buttonText}}\n    </button>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./chat-input.component.css'],\n})\nexport class ChatInputComponent implements OnInit {\n  @Input() public buttonText = 'â©ï¸'\n  @Input() public focus = new EventEmitter()\n  @Output() public send = new EventEmitter()\n  @Output() public dismiss = new EventEmitter()\n  @ViewChild('message') message: ElementRef\n\n  ngOnInit() {\n    this.focus.subscribe(() => this.focusMessage())\n  }\n\n  public focusMessage() {\n    this.message.nativeElement.focus()\n  }\n\n  public getMessage() {\n    return this.message.nativeElement.value\n  }\n\n  public clearMessage() {\n    this.message.nativeElement.value = ''\n  }\n\n  onSubmit() {\n    const message = this.getMessage()\n    if (message.trim() === '') {\n      return\n    }\n    this.send.emit({ message })\n    this.clearMessage()\n    this.focusMessage()\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core'\n\n@Component({\n  selector: 'chat-config',\n  template: `\n    <div class=\"chat-config\">\n      {{text}}\n      <button *ngFor=\"let item of themes\"\n              class=\"btn\" [class.btn-active]=\"item === theme\"\n              (click)=\"setTheme(item)\">\n        {{item}}\n      </button>\n    </div>\n  `,\n  styles: [`\n    .chat-config {\n      padding: 20px;\n    }\n    .btn {\n      padding: 5px;\n      margin: 0px 2px;\n      border: 1px solid #dedede;\n      outline: none;\n    }\n    .btn-active {\n      border: 1px solid #a0a0a0;\n    }\n    .btn:focus {\n      border: 1px solid #333;\n    }\n  `],\n})\nexport class ChatConfigComponent {\n  @Input() public theme: string\n  @Input() public text = 'Select theme'\n  @Output() public themeChange: EventEmitter<any> = new EventEmitter()\n\n  public themes = ['blue', 'grey', 'red']\n  public setTheme(theme) {\n    this.theme = theme\n    this.themeChange.emit(this.theme)\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { ChatAvatarComponent } from './chat-avatar/chat-avatar.component'\nimport { ChatWidgetComponent } from './chat-widget/chat-widget.component'\nimport { ChatInputComponent } from './chat-input/chat-input.component'\nimport { ChatConfigComponent } from './chat-config/chat-config.component'\nimport { ChatService } from './chatbot-rasa.service';\n\n@NgModule({\n  imports: [CommonModule, BrowserAnimationsModule],\n  declarations: [ChatAvatarComponent, ChatWidgetComponent, ChatInputComponent, ChatConfigComponent],\n  exports: [ChatWidgetComponent, ChatConfigComponent],\n  entryComponents: [ChatWidgetComponent, ChatConfigComponent],\n  providers: [ChatService]\n})\nexport class ChatbotRasaModule { }\n"]},"metadata":{},"sourceType":"module"}